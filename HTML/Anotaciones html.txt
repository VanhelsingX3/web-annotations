¿Qué es HTML5?
Es un estandar que aúna 3 tecnologías. 

- HTML -> Estructura.
- CSS -> Apariencia.
- JS -> Interactividad & animación.

<!DOCTYPE html> Manera de especificar ó de señalar que esta página web será programada en html5

<header> es un encabezado

<head> incluir información como: Hojas de estilo cascada (CSS), Archivos JS externos y internos, titulo, iconos, fuentes.

    <meta charset="iso-8559-1"/> Determina el tipo de caracteres de la web
    
    <meta name=""content=""/> Especifica un nombre para los metadatos.
    
    <title> Nombre de la web

<nav> es una barra de navegacion

<article> es un elemento de contenido unico

<section> son las divisiones de cualquier parte de la pagina

<aside> es contenido que no esta relacionado con el principal

<footer> para poner notas al pie

<link rel="shorcut icon" href="favicon.png"> este nos permite colocar un icono en la pestaña del navegador

Es importante mantener la secuencia de los
h1 h2 h3 h4 h5, por ejemplo no debemos usar h3 si no hemos usado h2 antes

---- Agrupacion de contenido --------

--listas anidadas

-desordenadas
<ul>
	<li></li>
	<li></li>
</ul>

-ordenadas
<ol>
	<li></li>
	<li></li>
</ol>

listas de definicion
<dl>
	<dt></dt>
	<dd></dd>
</dl>

--figure
Es un elemento que forma parte de nuestro contenido pero rompe con el flujo, por ejemplo una imagen que aparece en medio de una explicacion

<figure>
	<pre>
		<code>
			function hola(){
			return "hola"
		}
		</code>
	</pre>
	<figcaption> --descripcion opcional
		Declaracion de una funcion en Javascript
	</figcaption>
</figure>

--main, es donde debe ir el contenido mas importante de la pagina

<main>	
</main>

--hr, es una linea horizontal que nos ayuda a romper la secuencia

<hr>

--pre, significa preformateado, tal como hayas escrito el texto asi saldra en pantalla

<pre></pre>

--blockquote, esto nos ayuda para citar textos

<blockquote>	
</blockquote>

--div, es un contenedor mayormente para que podamos hacer modificaciones con js o css

<div></div>

--code, esta etiqueta sirva para que escribamos codigo que se va a mostrar en la pagina

<code>
</code>

---------Elementos en linea y de bloque-------------
<p>Este es un elemento de bloque</p>
<span>Este es un elemento de linea</span>

un elemento de linea siempre deberia estar dentro de un elemento de bloque

--elementos de linea
<small></small> esto indica que un texto tiene menor importancia
<strong></strong> esto indica que un texto es importante
<em></em> em viene de enfasis
<cite></cite> para citar un texto
<dfn></dfn> para definir algo, dar una definicion
<code></code> para escribir fragmentos de codigo
<data></data> es para poner datos que vengan de algun programa o estadistica

--elementos de texto comunes
<br> para saltos de linea
<q></q> es para citas, quotes
<abbr></abbr> abreviacion
<del></del> texto eliminado
<wbr> wordbreak, sirve para cuando una palabra es muy larga y esta etiqueta va enmedio de esa palabra entonces en ese punto la palabra puede cortarse en ese punto al siguiente renglon
<span></span> es un contenedor pero en linea
<i></i> italica
<b></b> negrita
<u></u> subrayada

<sup></sup> superindice
<sub></sub> subindice
<time></time> para horas, fechas
<mark></mark> para marcar o destacar algunos elementos
<a href=""></a> enlaces

--Enlaces
Tenemos dos tipos de enlaces: absolutos y relativos, los absolutos son una direccion del tipo https:.... los relativos son las carpetas

<a href="./carpeta/archivoHTML"></a> entrando a la carpeta
<a href="../archivoHTML"></a> el "../" indica que estamos saliendo de la carpeta

--Marcadores
los marcadores me permiten moverme hacia un texto que haya especificado
<ul>
	<li><a href="#capitulo1"></a></li>
	<li><a href="#capitulo2"></a></li>
	<li><a href="#capitulo3"></a></li>
</ul>

<p id="capitulo1">Capitulo 1</p>
<p id="capitulo2">Capitulo 2</p>
<p id="capitulo3">Capitulo 3</p>

--Marcadores hacia otra seccion de otra pagina

<a href="./pagina.html#nombreMarcador"></a>

--target="_blank"

<a href="pagina.html" target="_blank">Este enlace se abrira en otra pestaña</a>

-----------Indicadores--------------

-- min="0" indica un valor minimo que aceptara.
-- max="100" indica un valor máximo que aceptara.
-- high="90" indica un valor que se considera alto.
-- low="65" indica un valor que se considera bajo.

<meter value="94" min="0" max="100" high="90"></meter> medir datos dentro de un rango dado.

Su etiqueta auxiliar es: <progress> realizan la misma función pero está es compatible con el navegador de IE.

<progress value="94" min="0" max="100" high="90"></progress> medir datos dentro de un rango dado.

-------------imagenes---------------
--Existen dos tipos de imagenes:
-Bitmap mapa de bits o puntos
-Vector(svg) la imagen es dibujada con formulas matematicas es ideal para logotipos

--en los bitmap tenemos
-jpg este es ideal para fotografias
-png este es ideal para colores planos, iconos con transparencia o graficos con texto
-webP este formato es introducido por google pero solo soportado por Chrome, este busca remplazar a jpg y png pero siendo mas liviano

las imagenes se insertan con la etiqueta img

<img src="" alt="">

-src es la ruta de nuestra imagen
-alt texto alternativo a la imagen

Los SVG se insertan con la etiqueta svg

<svg widht="" height="" xmlns="http://ww.w3.org/2000/svg"></svg>

(Pexels, pagina de imagenes sin copyright)

-----------viewport y device pixel ratio-----------

viewport es la cantidad de espacio que tenemos para diseñar nuestra pagina web

device pixel ratio es la relacion entre pixeles reales y pixeles del viewport

<img src="imagen.jpg" srcset="imagen2.jpg 1.5x, imagen3.jpg 2x">

srcset lo que hace es evaluar el device pixel ratio y en base a el elegir una imagen

--picture
funciona igual que img con la diferencia que puede usar los media query de css
<picture>
	<source src="" type="">
	<source src="" type="">
	<source src="" type="">
</picture>

----------semantica y microdatos--------------

Los microdatos son atributos que le damos al contenido para definir que cosa es cada elemento

revisar la documentacion de "schema.org" para saber como aplicar los microdatos segun cada cosa

--herramienta de prueba de datos estructurados:

https://search.google.com/structured-data/testing-tool?hl=es

esto identificara si aplicamos bien los schemas.

--Open Graph
https://ogp.me/

Es un protocolo que utiliza facebook para el manejo de informacion

--depurador de facebook

https://developers.facebook.com/tools/debug/

esto identificara si al compartir nuestra pagina web el contenido se visualizara correctamente al compartir el enlace en facebook

----------tablas-------------

<table> -- etiqueta de la tabla
	<caption>Titulo de la tabla</caption> -- esta etiqueta es para colocar el titulo
	<thead>
		<tr> -- esto es una fila
			<th>esto es una celda de una cabecera</th>
		</tr>
	</thead>
	<tbody> -- cuerpo de la tabla
		<tr> -- esto es una fila
			<td> esto es una celda</td>
		</tr>
	</tbody>
	<tfoot> -- pie de la tabla
		<tr>
			<td></td>
		</tr>
	</tfoot>
</table>

-- como agrupar celdas
con el atributo colspan podemos definir cuantas celdas queremos cubrir
<table>
	<tr>
		<td colspan=""></td>
	</tr>
</table>

-- como agrupar filas
con en el atributo rowspan podemos difinir cuantas filas queremos cubrir desde esa celda
<table>
	<tr>
		<td rowspan=""></td>
	</tr>
</table>

-- coolgroup, este nos permite poder hacer cambios especificamente a cada columna de la tabla, por si queremos por ejemplo aplicar un estilo CSS a una columna en especifico de la tabla
<colgroup>
	<col> columna 1 de la tabla
	<col> columna 2 de la tabla
	.
	.
	.
</colgroup>

--------------Formularios----------------

<form> -- etiqueta de formulario

	--forma 1
	<label for="nombre">Titulo del campo</label>
	<input type="text" id="nombre"> -- input de texto
	<input type="submit" value="Enviar">

	--forma 2
	<label> Titulo del campo
		<input type="text">
	</label>
	<input type="submit" value="Enviar">
</form>

** el atributo placeholder de los inputs puede ayudarnos a omitir la colocacion de un label

--------- video y codecs html----------
el codec H264 es el estandar de video en la web

el atributo controls habilita los controles de reproduccion

el atributo autoplay hace que el video se reproduzca solo

el atributo poster permite definir un poster inicial para el video (este poster debe ser una imagen) 

<video src="video.mp4" controls autoplay poster="imagen.jpg"></video>

--------- audio y reproductores de video recomendados ------------

<audio src="music.mp3" controls autoplay></audio>

**video.js es un framework de js que nos ayuda a colocar un reproductor

**flowplayer una recomendacion de reproductor

----------- contenido interactivo en HTML---------

<details> -- esta etiqueta mantiene un contenido que se puede desplegar (acordeon)
	<summary>Titulo del contenido interactivo</summary>
	<p>este texto aparecera al hacer clic en el titulo del contenido</p>
</details>


<dialog id="modal"> -- esta etiqueta trata de simular una ventana modal
	<p></p>
</dialog>

-- el atributo open abre la ventana modal

--ejemplo de script para ejecutar la ventana modal
<script>
    const modal = document.getElementById('modal');
    const button = document.getElementById('button');
    button.addEventListener('click', ()=>{
    modal.setAttribute('open', 'true')
})
</script>

--------------contenido embebido-------------

<iframe src=""></iframe> esta etiqueta permite traerse otra pagina a la nuestra

wufoo permite crear formularios y nosotros lo insertamos con iframe 

disqus permite tener comentarios en tu pagina web

------ como mantenerse actualizado --------

--la pagina de la W3C
--la pagina de la WHATWG *especificacion recomendada*
--la pagina de "can i use" para saber en donde estan soportadas las funciones que queremos usar *pagina informativa excelente*
--documentacion de la MDN (Mozilla Developer Network) *recomendada para mantenerse actualizado en web*
